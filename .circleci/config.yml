version: 2.1
orbs:
  sonarcloud: sonarsource/sonarcloud@1.0.2
  slack: circleci/slack@4.3.0

aliases:
  - &restore-cache
    restore_cache:
      key: dependency-cache-{{ checksum "package.json" }}
  - &save-cache
    save_cache:
      key: dependency-cache-{{ checksum "package.json" }}
      paths:
        - ./node_modules
  - &install-deps
    run:
      name: Install dependencies
      command: npm install
  - &build-packages
    run:
      name: Build
      command: npm run build
  - &run-unit-tests
    run:
      name: Test
      command: npm run test:ci
  - &update-npm-version
    run:
      name: Update NPM version
      command: 'sudo npm install -g npm@latest'
  - &copy-package-json
    run:
      name: Copy package.json to dist
      command: cp -rf package.json dist
  - &copy-readme
    run:
      name: Copy Readme.md to dist
      command: cp -rf Readme.md dist
  - &copy-changelog
    run:
      name: Copy CHANGELOG.md to dist
      command: cp -rf CHANGELOG.md dist
  - &go-to-dist
    run:
      name: Go to dist directory before publish
      command: cd dist
  - &pre-release
    run:
      name: Create a pre release
      command: npm run pre-release
  - &npm-authenticate
    run:
      name: NPM Account Authentication
      command: echo //registry.npmjs.org/:_authToken=${NPM_TOKEN} > .npmrc
  - &npm-git-tags
    run:
      name: git push follow release tag
      command: git push --follow-tags -q https://${GH_TOKEN}@github.com/MikeDev75015/mongodb-pipeline-builder.git main
  - &npm-publish
    run:
      name: Publish package on npm
      command: npm run publish-latest


commands:
  set-git-local-user:
    description: "Set the account's default identity"
    steps:
      - run: git config credential.helper 'cache --timeout=120'
      - run: git config user.email ${USER_EMAIL}
      - run: git config user.name ${USER_NAME}
  copy-required-files-to-dist:
    description: "Copy/Move the publish required files to lib directory"
    steps:
      - *copy-readme
      - *copy-changelog
      - *copy-package-json

jobs:
  build:
    docker:
      - image: circleci/node:12
    steps:
      - checkout
      - *update-npm-version
      - *restore-cache
      - *install-deps
      - *save-cache
      - *build-packages
      - persist_to_workspace:
          root: .
          paths:
            - 'dist'
      - slack/notify:
          event: fail
          template: basic_fail_1

  unit_tests:
    docker:
      - image: circleci/node:12
    steps:
      - checkout
      - *restore-cache
      - *install-deps
      - *run-unit-tests
      - sonarcloud/scan
      - slack/notify:
          event: fail
          template: basic_fail_1

  prepare-pre-release:
    docker:
      - image: circleci/node:12
    steps:
      - checkout
      - *restore-cache
      - *install-deps
      - attach_workspace:
          at: .
      - set-git-local-user
      - *pre-release
      - *npm-git-tags
      - slack/notify:
          event: fail
          template: basic_fail_1

  pre-release:
    docker:
      - image: circleci/node:12
    steps:
      - checkout
      - *restore-cache
      - *install-deps
      - attach_workspace:
          at: .
      - run: ls dist
      - copy-required-files-to-dist
      - run: ls dist
      - persist_to_workspace:
          root: .
          paths:
            - dist
      - slack/notify:
          event: fail
          template: basic_fail_1

  publish-package-to-npm:
    working_directory: ~/project/dist
    docker:
      - image: circleci/node:12
    steps:
      - run: ls
      - run: ls dist
      - attach_workspace:
          at: .
      - run: ls
      - run: ls dist
      - *npm-authenticate
      - *npm-publish
      - slack/notify:
          event: fail
          template: basic_fail_1

  notify-success-job:
    docker:
      - image: cimg/base:2020.01
    resource_class: small
    steps:
      - slack/notify:
          event: always
          template: basic_success_1


workflows:
  build-and-test-main:
    when:
      not: << pipeline.git.tag >>
    jobs:
      - approval-build-and-test-main:
          type: approval
      - build:
          requires:
            - approval-build-and-test-main
          context: SLACK
          filters:
            tags:
              ignore:
                - /^v.*/
      - unit_tests:
          context:
            - SONARCLOUD
            - SLACK
          requires:
            - build
          filters:
            tags:
              ignore:
                - /^v.*/
      - notify-success-job:
          name: build-unit_tests-success
          context: SLACK
          requires:
            - build
            - unit_tests
          filters:
            tags:
              ignore:
                - /^v.*/
      - approval-prepare-pre-release:
          type: approval
          requires:
            - build
            - unit_tests
            - build-unit_tests-success
          filters:
            tags:
              ignore:
                - /^v.*/
            branches:
              only:
                - main
      - prepare-pre-release:
          context:
            - GIT
            - SLACK
          requires:
            - build
            - unit_tests
            - build-unit_tests-success
            - approval-prepare-pre-release
          filters:
            tags:
              ignore:
                - /^v.*/
            branches:
              only:
                - main
      - notify-success-job:
          name: prepare-pre-release-success
          context: SLACK
          requires:
            - build
            - unit_tests
            - build-unit_tests-success
            - approval-prepare-pre-release
            - prepare-pre-release
          filters:
            tags:
              ignore:
                - /^v.*/
            branches:
              only:
                - main


  publish-release:
    jobs:
      - build:
          context: SLACK
          filters:
            tags:
              only: /^v.*/
            branches:
              ignore: /.*/
      - pre-release:
          context:
            - GIT
            - SLACK
          requires:
            - build
          filters:
            tags:
              only: /^v.*/
            branches:
              ignore: /.*/
      - publish-package-to-npm:
          context:
            - GIT
            - SLACK
          requires:
            - build
            - pre-release
          filters:
            tags:
              only: /^v.*/
            branches:
              ignore: /.*/
      - notify-success-job:
          name: publish-package-to-npm-success
          context: SLACK
          requires:
            - build
            - pre-release
            - publish-package-to-npm
          filters:
            tags:
              only: /^v.*/
            branches:
              ignore: /.*/
